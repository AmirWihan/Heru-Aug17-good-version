
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.authRole == 'admin';
    }

    // Helper function to check if a user is a lawyer
    function isLawyer() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.authRole == 'lawyer';
    }

    // Users can read their own profile, admins can read any profile
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId;
      allow create: if request.auth.uid != null; // Allow any authenticated user to create their profile
    }

    // Clients can only read their own data
    match /clients/{clientId} {
      allow read, write: if request.auth.uid == clientId;
    }

    // Team members can only be read by admins
    match /teamMembers/{memberId} {
       allow read, write: if isAdmin();
    }
    
    // Fallback security rule: Disallow all other reads/writes by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
